{"mappings":"ACEgB,SAAS,gBAAgB,CAAC,MAElC,OAAO,CAAC,SAAA,CAAhB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAE/B,IAAM,EAAQ,AADA,EAAO,OAAO,CAAC,SACT,aAAa,CAAC,SAC5B,EAAO,EAAM,gBAAgB,CAAC,MAC9B,EAAQ,EAAO,SAAS,CACxB,EAAQ,EAAO,OAAO,CAAC,KAAK,CAC5B,EAAa,MAAM,IAAI,CAAC,GAAM,IAAI,CAAC,SAAC,CAAA,CAAM,CAAhD,EACE,IAAM,EAAQ,EAAK,gBAAgB,CAAC,KAAK,CAAC,EAAM,CAAC,WAAW,CACtD,EAAQ,EAAK,gBAAgB,CAAC,KAAK,CAAC,EAAM,CAAC,WAAW,OAE5D,AAAI,AAAU,QAAV,EACK,EAAQ,EAAQ,EAAI,GAEpB,EAAQ,EAAQ,EAAI,EAE/B,EAEA,CAAA,EAAM,SAAS,CAAG,GAClB,EAAW,OAAO,CAAC,SAAA,CAAnB,EAA0B,OAAA,EAAM,WAAW,CAAC,E,GAC5C,EAAO,OAAO,CAAC,KAAK,CAAG,AAAU,QAAV,EAAkB,OAAS,KACpD,EACF,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar headers = document.querySelectorAll(\"th\");\nheaders.forEach(function(header) {\n    header.addEventListener(\"click\", function() {\n        var table = header.closest(\"table\");\n        var tbody = table.querySelector(\"tbody\");\n        var rows = tbody.querySelectorAll(\"tr\");\n        var index = header.cellIndex;\n        var order = header.dataset.order;\n        var sortedRows = Array.from(rows).sort(function(rowA, rowB) {\n            var cellA = rowA.querySelectorAll(\"td\")[index].textContent;\n            var cellB = rowB.querySelectorAll(\"td\")[index].textContent;\n            if (order === \"asc\") return cellA > cellB ? 1 : -1;\n            else return cellA < cellB ? 1 : -1;\n        });\n        tbody.innerHTML = \"\";\n        sortedRows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n        header.dataset.order = order === \"asc\" ? \"desc\" : \"asc\";\n    });\n});\n\n//# sourceMappingURL=index.84dca1c9.js.map\n","'use strict';\n\nconst headers = document.querySelectorAll('th');\n\nheaders.forEach(header => {\n  header.addEventListener('click', () => {\n    const table = header.closest('table');\n    const tbody = table.querySelector('tbody');\n    const rows = tbody.querySelectorAll('tr');\n    const index = header.cellIndex;\n    const order = header.dataset.order;\n    const sortedRows = Array.from(rows).sort((rowA, rowB) => {\n      const cellA = rowA.querySelectorAll('td')[index].textContent;\n      const cellB = rowB.querySelectorAll('td')[index].textContent;\n\n      if (order === 'asc') {\n        return cellA > cellB ? 1 : -1;\n      } else {\n        return cellA < cellB ? 1 : -1;\n      }\n    });\n\n    tbody.innerHTML = '';\n    sortedRows.forEach(row => tbody.appendChild(row));\n    header.dataset.order = order === 'asc' ? 'desc' : 'asc';\n  });\n});\n"],"names":["document","querySelectorAll","forEach","header","addEventListener","tbody","table","closest","querySelector","rows","index","cellIndex","order","dataset","sortedRows","Array","from","sort","rowA","rowB","cellA","textContent","cellB","innerHTML","row","appendChild"],"version":3,"file":"index.84dca1c9.js.map"}